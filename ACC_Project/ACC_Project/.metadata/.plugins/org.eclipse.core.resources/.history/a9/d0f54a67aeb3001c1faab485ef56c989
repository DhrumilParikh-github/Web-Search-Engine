package webSearchEngine;

import java.io.File;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Hashtable;
import java.util.Scanner;
import java.util.regex.Pattern;

public class WebsiteSearchEngine {
	
	private static Scanner inputValue = new Scanner(System.in);

	/**
	 * The main method.
	 *
	 * @param args the arguments
	 * @throws Exception
	 */
	public static void main(String[] args) throws Exception {
		WebsiteSearchEngine engine = new WebsiteSearchEngine();
		String value = "n";	//initially setting the value to no
		
		System.out.println("=============Welcome to Web Search Engine===============\n");
		
		do {

			System.out.println(" 1. Enter 1 To search the pre-defined website --> https://www.w3schools.com/");
			System.out.println(" 2. Enter 2 To provide a URL for web search");
			System.out.println(" 3. Enter 3 To Exit ");
		
			int input = inputValue.nextInt();

			switch (input) {
			case 1:
				value = engine.webSearch("https://www.w3schools.com/");
				break;

			case 2:
				System.out.println("\n Please enter valid URL for example 'https://www.xyz.com/'");
				String url = inputValue.next();
				value = engine.webSearch(url);
				break;
				
			case 3:
				System.out.println("The Program has Stopped");
				value = "n";
				break;

			default:
				System.out.println("Please enter correct option");
				value = "y";

			}
		} while (value.equals("y"));


		System.out.println("=============THANK YOU FOR USING SEARCH ENGINE================");

	}

	private String webSearch(String url) {
		
		if(!isValid(url)) {
			 System.out.println("The url: " + url + " is not valid or reachable");
			 System.out.println("Please try again\n");
			 return "y";
		}
		
		System.out.println("The url: " + url + " is valid\n");
		
		System.out.println("Web Crawling is Starting...");
		WebCrawler.startCrawler(url, 0); //crawling the URL
		System.out.println("Web Crawling Compelted...");

		// Hash table is used instead of Hash Map as it don't allow null value in insertion
		Hashtable<String, Integer> filesList = new Hashtable<String, Integer>();
		
		String choice = "y";
		System.out.println("\n Do you want to search a word in the web sites? Enter(y/n)?");
		choice =inputValue.next();
		
		while (choice.equals("y")) {
			System.out.println("\n======================Enter the word to search======================");
			
			String word = inputValue.next();
			int occurance = 0;
			int fileNumber = 0;
			filesList.clear();
			try {
					System.out.println("\nLooking into the files for the word: "+word+"\n");
					File files = new File(PathFinder.textFilesPath);
	
					File[] fileArray = files.listFiles();
	
					for (int i = 0; i < fileArray.length; i++) {
	
						In data = new In(fileArray[i].getAbsolutePath());
	
						String txt = data.readAll();
						data.close();
						Pattern p = Pattern.compile("::");
						String[] file_name = p.split(txt);
						occurance = WordFinder.findWord(txt, word.toLowerCase(), file_name[0]); // search word in txt files
	
						if (occurance != 0) {
							filesList.put(file_name[0], occurance);
							fileNumber++;
						}
						
					}
	
					if(fileNumber>0) {
					System.out.println("\nTotal Number of Files containing word : \"" + word + "\" is : " + fileNumber);
					}else {
						System.out.println("\n No file found that contains word : \""+ word+"\"");
						WordFinder.suggestAltWord(word.toLowerCase()); // suggest another word if entered word not found
					}
	
					WordFinder.rankFiles(filesList, fileNumber); //rank the files based on frequency of word count
					

				} catch (Exception e) {
					System.out.println("Exception:" + e);
				}
			System.out.println("\n Do you want to search another Word? Enter(y/n)?");
			choice =inputValue.next();
		}
		
		
		
		deleteFiles();

		
		System.out.println("\n Do you want return to main menu(y/n)?");
		return inputValue.next();
	}

	private void deleteFiles() {
		String choice = "y";
		System.out.println("\n All the files are sorted in location: "+ PathFinder.htmlFilesPath);
		System.out.println("\n Do you want to delete all the files? Enter(y/n)?");
		choice =inputValue.next();
		if(choice.equals("y")) {
			File files = new File(PathFinder.textFilesPath);
			File[] fileArray = files.listFiles();
	
			for (int i = 0; i < fileArray.length; i++) {
				fileArray[i].delete();
			}
			
			File fileshtml = new File(PathFinder.htmlFilesPath);
			File[] fileArrayhtml = fileshtml.listFiles();
	
			for (int i = 0; i < fileArrayhtml.length; i++) {
				
				fileArrayhtml[i].delete();
			}
		}
	}
	
	/**
	 * It will validate url entered by user with DNS
	 * @param url
	 * @return
	 */
	public boolean isValid(String url)
    {
        /* Try creating a valid URL */
        try {
        	System.out.println("Validating URL...");
        	URL obj = new URL(url);
            HttpURLConnection conn = (HttpURLConnection) obj.openConnection();
            //Sending the request
            conn.setRequestMethod("GET");
            int response = conn.getResponseCode();
            if(response==200) {
            	 return true;
            }else {
            	return false;
            }
           
        }
          
        // If there was an Exception
        // while creating URL object
        catch (Exception e) {
            return false;
        }
    }

}
